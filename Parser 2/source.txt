class QuickSort {
	int [] array;
	public int sort( int [] array, int low, int high ) { 
		if ( low < high ) {
			int index = partition(array, low, high);
			sort(array, low, index);
			sort(array, index + 1, high);
		}
	}
	public void partition(int [] array, int low, int high) {
		int index = low;
		swap(index, low);
		int pivot = array[low];
		while (low < high && high >= pivot) {
			while ( low < high) {
				high--;
			}
			array[low] = array[high];
			while (low < high && array[low] < pivot) {
				high++;
			}
			array[high] = array[low];
		}
		array[low] = pivot;
		return low;
	}
	public void swap(int i, int j) {
		int temp = array[i];
		array[i] = array[j];
		array[j] = temp;
	}
	public void main(int y) {
		int [] array = {3, 2, 4, 1, 6, 9, 14, 2, 5, 7, 0};
		QuickSort q = new QuickSort(array);
		q @ sort(array, 0, length - 1);
	}
}

